#![feature(portable_simd)]

pub mod simd;

pub fn swipe_left_u8_inf_arr(cells: &mut [u8]) -> usize {
    // Find first non empty cell
    let Some(current) = cells
        .iter()
        .enumerate()
        .find_map(|(i, &c)| (c != 0).then_some(i))
    else {
        return 0;
    };

    let mut last = 0; // Write ptr
    cells.swap(last, current);

    for current in current + 1..cells.len() {
        if cells[current] == 0 {
            continue;
        } else if cells[current] == cells[last] {
            cells[last] += 1;
            cells[current] = 0;
            last += 1;
        } else {
            (cells[last] != 0).then(|| last += 1);
            cells.swap(last, current);
        }
    }

    last
}

pub fn swipe_right_u8_inf_arr(row: &mut [u8]) {
    row.reverse();
    swipe_left_u8_inf_arr(row);
    row.reverse();
}

//#[derive(Default, Clone, PartialEq, Eq)]
//struct PieceMask(u16);
//
//impl PieceMask {
//    pub fn swipe_right(self) -> Self {
//        let PieceMask(mask) = self;
//        Self(swipe_right_bitmask_u16(mask))
//    }
//}

#[inline(never)]
pub fn swipe_right_bitmask_u16(mask: u16) -> u16 {
    let cols: [_; 4] = std::array::from_fn(|i| (mask >> i) & 0x1111);
    let row_counts: u16 = cols.iter().sum();
    // 0000 -> 0000
    // 0001 -> 0001
    // 0010 -> 0011
    // 0011 -> 0111
    // 0100 -> 1111

    let a = (row_counts >> 2) & 0x1111;
    let b = (row_counts >> 1) & 0x1111;
    let c = row_counts & 0x1111;

    (a | b | c) + ((a | b) << 1) + ((a | b & c) << 2) + (a << 3)
}

//impl fmt::Debug for PieceMask {
//    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
//        let mask = self.0;
//
//        // Iterate over each row in the 4x4 grid
//        let mut i = 0;
//
//        while {
//            write!(f, "{:04b}", (mask >> (4 * i)) & 0b1111)?;
//            i += 1;
//            i < 4
//        } {
//            f.write_char('_')?
//        }
//
//        Ok(())
//    }
//}
//
//#[derive()]
//struct BitBoard<'a> {
//    masks: Cow<'a, [u16]>,
//}
//
//impl BitBoard<'_> {
//    pub fn new_empty() -> Self {
//        Self {
//            masks: Cow::Borrowed(&[]),
//        }
//    }
//}

//#[cfg(test)]
//mod tests {
//    use super::*;
//
//    macro_rules! swipe_test {
//        ($input:expr, $expected:expr) => {
//            let input = PieceMask($input);
//            let expected = PieceMask($expected);
//            let result = input.clone().swipe_right();
//            assert_eq!(
//                result, expected,
//                "
//Test failed:
//   Input: {:?}
//Expected: {:?}
//     Got: {:?}
//",
//                input, expected, result
//            );
//        };
//    }
//
//    #[test]
//    fn test_piece_mask_swipe() {
//        // Macro usage to define tests
//        swipe_test!(0b0, 0b0);
//        swipe_test!(!0b0, !0b0);
//        swipe_test!(0b0000_0000_0000_0001, 0b0000_0000_0000_0001);
//        swipe_test!(0b0000_0010_0000_0000, 0b0000_0001_0000_0000);
//        swipe_test!(0b0000_0101_0000_0010, 0b0000_0011_0000_0001);
//        swipe_test!(0b0000_1111_0000_0000, 0b0000_1111_0000_0000);
//        swipe_test!(0b0010_0001_1000_0000, 0b0001_0001_0001_0000);
//        swipe_test!(0b0010_1111_0000_0000, 0b0001_1111_0000_0000);
//        swipe_test!(0b0100_0001_0010_0000, 0b0001_0001_0001_0000);
//        swipe_test!(0b0100_0001_0010_0100, 0b0001_0001_0001_0001);
//        swipe_test!(0b1100_0001_0000_0000, 0b0011_0001_0000_0000);
//        swipe_test!(0b1100_0101_1001_1100, 0b0011_0011_0011_0011);
//        swipe_test!(0b0111_0001_1000_1010, 0b0111_0001_0001_0011);
//        swipe_test!(0b0010_0011_0000_1010, 0b0001_0011_0000_0011);
//        swipe_test!(0b0110_1101_1111_0101, 0b0011_0111_1111_0011);
//        swipe_test!(0b0101_1111_1101_1010, 0b0011_1111_0111_0011);
//        swipe_test!(0b0100_1110_0011_0010, 0b0001_0111_0011_0001);
//        swipe_test!(0b1110_0100_0011_1110, 0b0111_0001_0011_0111);
//        swipe_test!(0b0111_1111_0111_0010, 0b0111_1111_0111_0001);
//        swipe_test!(0b0110_1111_0101_0000, 0b0011_1111_0011_0000);
//        swipe_test!(0b1000_0001_1110_1010, 0b0001_0001_0111_0011);
//        swipe_test!(0b1011_0001_0011_1110, 0b0111_0001_0011_0111);
//        swipe_test!(0b1011_1110_0000_1001, 0b0111_0111_0000_0011);
//        swipe_test!(0b0011_1001_0011_1010, 0b0011_0011_0011_0011);
//        swipe_test!(0b1100_1110_1100_0101, 0b0011_0111_0011_0011);
//        swipe_test!(0b1001_1101_1000_0110, 0b0011_0111_0001_0011);
//        swipe_test!(0b0100_1010_1100_0100, 0b0001_0011_0011_0001);
//        swipe_test!(0b0101_0010_0011_0110, 0b0011_0001_0011_0011);
//        swipe_test!(0b0001_0100_1001_0010, 0b0001_0001_0011_0001);
//        swipe_test!(0b1101_0101_1011_0011, 0b0111_0011_0111_0011);
//        swipe_test!(0b0011_0000_0010_0110, 0b0011_0000_0001_0011);
//        swipe_test!(0b1000_0000_0101_1010, 0b0001_0000_0011_0011);
//        swipe_test!(0b1011_0101_1111_0000, 0b0111_0011_1111_0000);
//        swipe_test!(0b1101_1110_0011_0001, 0b0111_0111_0011_0001);
//        swipe_test!(0b0000_1001_0010_1000, 0b0000_0011_0001_0001);
//        swipe_test!(0b0110_1001_1100_1000, 0b0011_0011_0011_0001);
//        swipe_test!(0b1100_1011_1000_1000, 0b0011_0111_0001_0001);
//        swipe_test!(0b1001_0000_0000_0011, 0b0011_0000_0000_0011);
//        swipe_test!(0b1000_1111_1010_1101, 0b0001_1111_0011_0111);
//        swipe_test!(0b0111_0000_1000_0011, 0b0111_0000_0001_0011);
//        swipe_test!(0b1101_1011_1100_1001, 0b0111_0111_0011_0011);
//        swipe_test!(0b1111_0110_1100_1011, 0b1111_0011_0011_0111);
//        swipe_test!(0b0100_0110_0011_1110, 0b0001_0011_0011_0111);
//        swipe_test!(0b1011_0111_0101_0111, 0b0111_0111_0011_0111);
//        swipe_test!(0b1000_1101_0001_0100, 0b0001_0111_0001_0001);
//        swipe_test!(0b1110_1110_1111_0000, 0b0111_0111_1111_0000);
//        swipe_test!(0b1011_1011_0001_0000, 0b0111_0111_0001_0000);
//        swipe_test!(0b1000_0010_0110_1111, 0b0001_0001_0011_1111);
//        swipe_test!(0b0010_0110_1010_0010, 0b0001_0011_0011_0001);
//        swipe_test!(0b1110_0000_1001_0011, 0b0111_0000_0011_0011);
//        swipe_test!(0b0101_1011_1010_1001, 0b0011_0111_0011_0011);
//        swipe_test!(0b0010_0010_0110_1000, 0b0001_0001_0011_0001);
//        swipe_test!(0b0000_0000_1100_1111, 0b0000_0000_0011_1111);
//        swipe_test!(0b1000_0111_1010_0100, 0b0001_0111_0011_0001);
//        swipe_test!(0b0100_0011_0000_0111, 0b0001_0011_0000_0111);
//        swipe_test!(0b1011_0000_0000_1100, 0b0111_0000_0000_0011);
//        swipe_test!(0b1000_1110_0110_0010, 0b0001_0111_0011_0001);
//        swipe_test!(0b0010_1010_0110_1111, 0b0001_0011_0011_1111);
//        swipe_test!(0b0111_0101_0011_1111, 0b0111_0011_0011_1111);
//        swipe_test!(0b1011_1010_0010_0000, 0b0111_0011_0001_0000);
//        swipe_test!(0b0111_0100_0110_0111, 0b0111_0001_0011_0111);
//        swipe_test!(0b0001_1101_1001_1111, 0b0001_0111_0011_1111);
//        swipe_test!(0b1110_1001_1010_0101, 0b0111_0011_0011_0011);
//        swipe_test!(0b1000_1100_1000_1111, 0b0001_0011_0001_1111);
//        swipe_test!(0b0011_1000_1010_1011, 0b0011_0001_0011_0111);
//        swipe_test!(0b0100_0100_0111_1010, 0b0001_0001_0111_0011);
//        swipe_test!(0b1001_0101_1110_1101, 0b0011_0011_0111_0111);
//        swipe_test!(0b1000_1101_0001_0010, 0b0001_0111_0001_0001);
//        swipe_test!(0b0000_1000_1101_0000, 0b0000_0001_0111_0000);
//        swipe_test!(0b0111_1101_0111_1010, 0b0111_0111_0111_0011);
//        swipe_test!(0b0000_1101_1111_0001, 0b0000_0111_1111_0001);
//        swipe_test!(0b1000_1011_1101_1100, 0b0001_0111_0111_0011);
//        swipe_test!(0b1011_0101_1100_0000, 0b0111_0011_0011_0000);
//        swipe_test!(0b0011_0101_0001_0010, 0b0011_0011_0001_0001);
//        swipe_test!(0b0111_1110_0010_1101, 0b0111_0111_0001_0111);
//        swipe_test!(0b1001_0111_0101_1010, 0b0011_0111_0011_0011);
//        swipe_test!(0b1100_1011_0001_0100, 0b0011_0111_0001_0001);
//        swipe_test!(0b0010_1101_1010_1111, 0b0001_0111_0011_1111);
//        swipe_test!(0b1100_0001_0101_0001, 0b0011_0001_0011_0001);
//        swipe_test!(0b0011_0010_0011_1101, 0b0011_0001_0011_0111);
//        swipe_test!(0b0100_1000_1000_0011, 0b0001_0001_0001_0011);
//        swipe_test!(0b1000_1101_1100_0101, 0b0001_0111_0011_0011);
//        swipe_test!(0b1010_1000_0110_0001, 0b0011_0001_0011_0001);
//        swipe_test!(0b1101_1100_0110_0110, 0b0111_0011_0011_0011);
//        swipe_test!(0b1101_1010_1110_0110, 0b0111_0011_0111_0011);
//        swipe_test!(0b1000_1011_1001_1001, 0b0001_0111_0011_0011);
//        swipe_test!(0b0001_0000_1011_1110, 0b0001_0000_0111_0111);
//        swipe_test!(0b0011_0111_0101_0110, 0b0011_0111_0011_0011);
//        swipe_test!(0b1000_1100_0111_0001, 0b0001_0011_0111_0001);
//        swipe_test!(0b0101_0111_1100_1000, 0b0011_0111_0011_0001);
//        swipe_test!(0b1100_0110_1110_0000, 0b0011_0011_0111_0000);
//        swipe_test!(0b0000_1000_1100_0001, 0b0000_0001_0011_0001);
//        swipe_test!(0b0101_0111_0111_1001, 0b0011_0111_0111_0011);
//        swipe_test!(0b0101_1110_1010_0100, 0b0011_0111_0011_0001);
//        swipe_test!(0b1110_1110_0100_1110, 0b0111_0111_0001_0111);
//        swipe_test!(0b0001_0011_0001_0101, 0b0001_0011_0001_0011);
//        swipe_test!(0b1101_0001_1010_0111, 0b0111_0001_0011_0111);
//        swipe_test!(0b1000_1111_1100_0101, 0b0001_1111_0011_0011);
//        swipe_test!(0b1001_1101_0101_1100, 0b0011_0111_0011_0011);
//        swipe_test!(0b0111_1111_0001_1001, 0b0111_1111_0001_0011);
//        swipe_test!(0b0000_0110_1111_0001, 0b0000_0011_1111_0001);
//        swipe_test!(0b0001_0001_0110_0000, 0b0001_0001_0011_0000);
//        swipe_test!(0b1001_1101_1111_1011, 0b0011_0111_1111_0111);
//        swipe_test!(0b0100_1100_1110_0001, 0b0001_0011_0111_0001);
//        swipe_test!(0b1001_1011_1101_0011, 0b0011_0111_0111_0011);
//        swipe_test!(0b0010_0000_0100_0010, 0b0001_0000_0001_0001);
//        swipe_test!(0b0100_0110_0000_1111, 0b0001_0011_0000_1111);
//        swipe_test!(0b0000_0000_1000_0001, 0b0000_0000_0001_0001);
//        swipe_test!(0b1110_1000_1111_0000, 0b0111_0001_1111_0000);
//        swipe_test!(0b0110_1110_0000_0110, 0b0011_0111_0000_0011);
//        swipe_test!(0b0101_0000_0001_1010, 0b0011_0000_0001_0011);
//        swipe_test!(0b1000_0110_0101_0101, 0b0001_0011_0011_0011);
//        swipe_test!(0b0000_1010_1101_1111, 0b0000_0011_0111_1111);
//        swipe_test!(0b1100_0000_0011_1110, 0b0011_0000_0011_0111);
//        swipe_test!(0b1001_1000_0011_1101, 0b0011_0001_0011_0111);
//        swipe_test!(0b0111_1101_0110_0110, 0b0111_0111_0011_0011);
//        swipe_test!(0b0010_0010_0111_0110, 0b0001_0001_0111_0011);
//        swipe_test!(0b1110_1000_1110_0110, 0b0111_0001_0111_0011);
//        swipe_test!(0b1101_0010_1010_1001, 0b0111_0001_0011_0011);
//        swipe_test!(0b1000_1111_1100_0011, 0b0001_1111_0011_0011);
//        swipe_test!(0b1010_1000_0100_1101, 0b0011_0001_0001_0111);
//        swipe_test!(0b1010_0111_1001_1100, 0b0011_0111_0011_0011);
//        swipe_test!(0b0110_1010_1011_0111, 0b0011_0011_0111_0111);
//        swipe_test!(0b0111_0100_0101_0111, 0b0111_0001_0011_0111);
//        swipe_test!(0b1100_0000_0111_0100, 0b0011_0000_0111_0001);
//        swipe_test!(0b0000_1000_0100_0111, 0b0000_0001_0001_0111);
//        swipe_test!(0b0110_1100_0100_1000, 0b0011_0011_0001_0001);
//        swipe_test!(0b0011_1100_1000_1101, 0b0011_0011_0001_0111);
//        swipe_test!(0b1111_1110_1000_0000, 0b1111_0111_0001_0000);
//        swipe_test!(0b0001_1011_1000_0011, 0b0001_0111_0001_0011);
//        swipe_test!(0b1010_0010_1111_0110, 0b0011_0001_1111_0011);
//        swipe_test!(0b0010_1010_1011_0000, 0b0001_0011_0111_0000);
//        swipe_test!(0b0100_0110_0101_0110, 0b0001_0011_0011_0011);
//        swipe_test!(0b0111_1101_1010_0011, 0b0111_0111_0011_0011);
//        swipe_test!(0b1000_1110_0000_1010, 0b0001_0111_0000_0011);
//        swipe_test!(0b1100_0111_1010_1110, 0b0011_0111_0011_0111);
//        swipe_test!(0b0110_1110_1000_1100, 0b0011_0111_0001_0011);
//        swipe_test!(0b1001_1100_1011_0000, 0b0011_0011_0111_0000);
//        swipe_test!(0b0100_1110_1100_1100, 0b0001_0111_0011_0011);
//        swipe_test!(0b0011_0000_0001_0001, 0b0011_0000_0001_0001);
//        swipe_test!(0b0000_0111_1001_1101, 0b0000_0111_0011_0111);
//        swipe_test!(0b1110_1000_0111_1010, 0b0111_0001_0111_0011);
//        swipe_test!(0b1000_0000_0101_0111, 0b0001_0000_0011_0111);
//        swipe_test!(0b1100_1111_0010_1111, 0b0011_1111_0001_1111);
//        swipe_test!(0b1011_0100_1011_1110, 0b0111_0001_0111_0111);
//        swipe_test!(0b1010_1010_0100_0010, 0b0011_0011_0001_0001);
//        swipe_test!(0b1011_0000_0011_0000, 0b0111_0000_0011_0000);
//        swipe_test!(0b1001_1010_1101_0000, 0b0011_0011_0111_0000);
//        swipe_test!(0b0011_0010_0110_0110, 0b0011_0001_0011_0011);
//        swipe_test!(0b0110_1110_0010_1001, 0b0011_0111_0001_0011);
//        swipe_test!(0b1110_0111_1110_1110, 0b0111_0111_0111_0111);
//        swipe_test!(0b1111_0011_0011_1010, 0b1111_0011_0011_0011);
//        swipe_test!(0b0101_0011_1100_0111, 0b0011_0011_0011_0111);
//        swipe_test!(0b1011_0011_0010_1101, 0b0111_0011_0001_0111);
//        swipe_test!(0b1010_0111_0101_0000, 0b0011_0111_0011_0000);
//        swipe_test!(0b1100_0000_0101_1001, 0b0011_0000_0011_0011);
//        swipe_test!(0b1110_0111_1101_1100, 0b0111_0111_0111_0011);
//        swipe_test!(0b1111_0101_1101_0010, 0b1111_0011_0111_0001);
//        swipe_test!(0b1000_0111_0111_1010, 0b0001_0111_0111_0011);
//        swipe_test!(0b0110_0000_0010_1111, 0b0011_0000_0001_1111);
//        swipe_test!(0b0110_0101_0011_1011, 0b0011_0011_0011_0111);
//        swipe_test!(0b1110_0011_1111_0111, 0b0111_0011_1111_0111);
//        swipe_test!(0b0110_1000_1111_0110, 0b0011_0001_1111_0011);
//        swipe_test!(0b0010_0110_0100_1111, 0b0001_0011_0001_1111);
//        swipe_test!(0b1111_1001_1010_0010, 0b1111_0011_0011_0001);
//        swipe_test!(0b1001_1000_0010_0000, 0b0011_0001_0001_0000);
//        swipe_test!(0b0001_0110_1111_1101, 0b0001_0011_1111_0111);
//        swipe_test!(0b1001_1000_0111_1000, 0b0011_0001_0111_0001);
//        swipe_test!(0b1001_0101_0111_0110, 0b0011_0011_0111_0011);
//        swipe_test!(0b1010_0100_1100_0000, 0b0011_0001_0011_0000);
//        swipe_test!(0b1101_1100_1011_1011, 0b0111_0011_0111_0111);
//        swipe_test!(0b1001_0110_0110_1011, 0b0011_0011_0011_0111);
//        swipe_test!(0b0011_1000_1110_1011, 0b0011_0001_0111_0111);
//        swipe_test!(0b0100_1011_1101_0000, 0b0001_0111_0111_0000);
//        swipe_test!(0b1011_1110_0101_0000, 0b0111_0111_0011_0000);
//        swipe_test!(0b1011_0100_1111_0011, 0b0111_0001_1111_0011);
//        swipe_test!(0b1110_0000_0001_0100, 0b0111_0000_0001_0001);
//        swipe_test!(0b1110_1101_0111_0010, 0b0111_0111_0111_0001);
//        swipe_test!(0b1011_1101_1111_1111, 0b0111_0111_1111_1111);
//        swipe_test!(0b1111_0110_0110_1100, 0b1111_0011_0011_0011);
//        swipe_test!(0b1001_0010_1000_1110, 0b0011_0001_0001_0111);
//        swipe_test!(0b1001_0100_1100_0101, 0b0011_0001_0011_0011);
//        swipe_test!(0b1001_0001_1011_0010, 0b0011_0001_0111_0001);
//        swipe_test!(0b1100_0110_1001_0110, 0b0011_0011_0011_0011);
//        swipe_test!(0b0001_0010_1110_0110, 0b0001_0001_0111_0011);
//        swipe_test!(0b1000_0010_0010_1100, 0b0001_0001_0001_0011);
//        swipe_test!(0b1111_1010_0100_0001, 0b1111_0011_0001_0001);
//        swipe_test!(0b1011_0100_0000_0000, 0b0111_0001_0000_0000);
//        swipe_test!(0b1110_0011_0111_1101, 0b0111_0011_0111_0111);
//        swipe_test!(0b0011_1100_1000_1100, 0b0011_0011_0001_0011);
//        swipe_test!(0b0010_1010_1110_0001, 0b0001_0011_0111_0001);
//        swipe_test!(0b1010_0001_0010_0110, 0b0011_0001_0001_0011);
//        swipe_test!(0b1101_0110_1100_0110, 0b0111_0011_0011_0011);
//        swipe_test!(0b1101_0001_1101_0100, 0b0111_0001_0111_0001);
//        swipe_test!(0b0011_1011_0000_1000, 0b0011_0111_0000_0001);
//        swipe_test!(0b0001_1101_1010_0010, 0b0001_0111_0011_0001);
//        swipe_test!(0b1111_0101_1101_0001, 0b1111_0011_0111_0001);
//        swipe_test!(0b1111_0010_1110_0101, 0b1111_0001_0111_0011);
//        swipe_test!(0b1111_0000_1111_1010, 0b1111_0000_1111_0011);
//        swipe_test!(0b1101_0111_0001_1110, 0b0111_0111_0001_0111);
//        swipe_test!(0b0111_0101_1100_1110, 0b0111_0011_0011_0111);
//        swipe_test!(0b0101_1101_0011_0010, 0b0011_0111_0011_0001);
//        swipe_test!(0b1001_1010_1100_0010, 0b0011_0011_0011_0001);
//        swipe_test!(0b1001_1111_0100_1111, 0b0011_1111_0001_1111);
//        swipe_test!(0b1010_1110_1011_0010, 0b0011_0111_0111_0001);
//        swipe_test!(0b0100_0000_0001_0110, 0b0001_0000_0001_0011);
//        swipe_test!(0b1111_0101_1110_1010, 0b1111_0011_0111_0011);
//        swipe_test!(0b0110_0011_1010_1110, 0b0011_0011_0011_0111);
//        swipe_test!(0b1100_0011_0010_1001, 0b0011_0011_0001_0011);
//        swipe_test!(0b0011_1011_1100_0100, 0b0011_0111_0011_0001);
//        swipe_test!(0b0001_0000_1110_0111, 0b0001_0000_0111_0111);
//        swipe_test!(0b1100_0111_0010_0100, 0b0011_0111_0001_0001);
//        swipe_test!(0b0011_1110_1011_1101, 0b0011_0111_0111_0111);
//        swipe_test!(0b1010_1111_0000_1000, 0b0011_1111_0000_0001);
//        swipe_test!(0b0101_0000_1000_0110, 0b0011_0000_0001_0011);
//        swipe_test!(0b0000_1110_1010_0110, 0b0000_0111_0011_0011);
//        swipe_test!(0b1100_1010_0010_0110, 0b0011_0011_0001_0011);
//        swipe_test!(0b1101_0011_0011_0011, 0b0111_0011_0011_0011);
//        swipe_test!(0b0100_0111_0101_0000, 0b0001_0111_0011_0000);
//        swipe_test!(0b1000_1010_1100_0101, 0b0001_0011_0011_0011);
//        swipe_test!(0b0001_0000_1001_0100, 0b0001_0000_0011_0001);
//        swipe_test!(0b0110_1010_0010_0101, 0b0011_0011_0001_0011);
//        swipe_test!(0b0101_1000_1100_1001, 0b0011_0001_0011_0011);
//        swipe_test!(0b0000_1011_1001_1000, 0b0000_0111_0011_0001);
//        swipe_test!(0b0001_1010_1010_1101, 0b0001_0011_0011_0111);
//        swipe_test!(0b0101_0111_1100_1101, 0b0011_0111_0011_0111);
//        swipe_test!(0b1000_1111_1101_0000, 0b0001_1111_0111_0000);
//        swipe_test!(0b0011_1101_0000_1110, 0b0011_0111_0000_0111);
//        swipe_test!(0b1000_1101_0111_1001, 0b0001_0111_0111_0011);
//        swipe_test!(0b0101_0000_1111_0110, 0b0011_0000_1111_0011);
//        swipe_test!(0b1100_0010_1010_0100, 0b0011_0001_0011_0001);
//        swipe_test!(0b0110_1101_1111_0110, 0b0011_0111_1111_0011);
//        swipe_test!(0b1100_0011_0101_1101, 0b0011_0011_0011_0111);
//        swipe_test!(0b1001_1110_0001_1101, 0b0011_0111_0001_0111);
//        swipe_test!(0b1111_0001_0100_0111, 0b1111_0001_0001_0111);
//        swipe_test!(0b0111_1100_0000_1101, 0b0111_0011_0000_0111);
//        swipe_test!(0b0101_1010_0000_0101, 0b0011_0011_0000_0011);
//        swipe_test!(0b0110_1101_1001_0000, 0b0011_0111_0011_0000);
//        swipe_test!(0b1000_1110_1110_0001, 0b0001_0111_0111_0001);
//        swipe_test!(0b1001_0101_1011_0001, 0b0011_0011_0111_0001);
//        swipe_test!(0b1000_0001_0111_0100, 0b0001_0001_0111_0001);
//        swipe_test!(0b1001_0111_1100_1001, 0b0011_0111_0011_0011);
//        swipe_test!(0b1010_0111_1011_1010, 0b0011_0111_0111_0011);
//        swipe_test!(0b0111_1010_0111_0101, 0b0111_0011_0111_0011);
//        swipe_test!(0b0111_0011_1111_0100, 0b0111_0011_1111_0001);
//        swipe_test!(0b1011_1001_0000_0111, 0b0111_0011_0000_0111);
//        swipe_test!(0b0010_0100_0001_0100, 0b0001_0001_0001_0001);
//        swipe_test!(0b1011_1111_0101_0001, 0b0111_1111_0011_0001);
//        swipe_test!(0b0101_1001_1101_1000, 0b0011_0011_0111_0001);
//        swipe_test!(0b1010_0101_0010_1011, 0b0011_0011_0001_0111);
//        swipe_test!(0b1101_1001_1000_0011, 0b0111_0011_0001_0011);
//        swipe_test!(0b1010_1001_0111_1110, 0b0011_0011_0111_0111);
//        swipe_test!(0b1001_0110_0101_1111, 0b0011_0011_0011_1111);
//        swipe_test!(0b1001_1110_0101_0001, 0b0011_0111_0011_0001);
//        swipe_test!(0b1000_0000_1000_1011, 0b0001_0000_0001_0111);
//        swipe_test!(0b0100_0001_1111_1000, 0b0001_0001_1111_0001);
//        swipe_test!(0b0100_0110_1000_1101, 0b0001_0011_0001_0111);
//        swipe_test!(0b0101_0101_1100_1010, 0b0011_0011_0011_0011);
//        swipe_test!(0b1110_1000_1111_0111, 0b0111_0001_1111_0111);
//        swipe_test!(0b0001_0001_0111_0101, 0b0001_0001_0111_0011);
//        swipe_test!(0b1100_1001_0011_1101, 0b0011_0011_0011_0111);
//        swipe_test!(0b1110_0001_0101_0011, 0b0111_0001_0011_0011);
//        swipe_test!(0b1001_1011_0000_1001, 0b0011_0111_0000_0011);
//        swipe_test!(0b1100_0100_1111_0011, 0b0011_0001_1111_0011);
//        swipe_test!(0b1000_0110_0001_0101, 0b0001_0011_0001_0011);
//        swipe_test!(0b1100_1101_1011_0101, 0b0011_0111_0111_0011);
//        swipe_test!(0b0010_0010_0000_0011, 0b0001_0001_0000_0011);
//        swipe_test!(0b0010_1100_1101_1111, 0b0001_0011_0111_1111);
//        swipe_test!(0b1011_0000_0000_1100, 0b0111_0000_0000_0011);
//        swipe_test!(0b0100_1011_0010_1000, 0b0001_0111_0001_0001);
//        swipe_test!(0b0101_0100_0101_0110, 0b0011_0001_0011_0011);
//        swipe_test!(0b0000_0101_0100_1000, 0b0000_0011_0001_0001);
//        swipe_test!(0b0110_1100_1010_1100, 0b0011_0011_0011_0011);
//        swipe_test!(0b0101_1000_1110_0010, 0b0011_0001_0111_0001);
//        swipe_test!(0b1001_0001_1000_1110, 0b0011_0001_0001_0111);
//        swipe_test!(0b1011_1001_1100_0100, 0b0111_0011_0011_0001);
//        swipe_test!(0b0101_0100_1000_1011, 0b0011_0001_0001_0111);
//        swipe_test!(0b1001_1010_1111_0000, 0b0011_0011_1111_0000);
//        swipe_test!(0b1000_1010_0011_1011, 0b0001_0011_0011_0111);
//        swipe_test!(0b1001_1010_0111_1010, 0b0011_0011_0111_0011);
//        swipe_test!(0b1001_0101_0001_1111, 0b0011_0011_0001_1111);
//        swipe_test!(0b1001_0011_0101_0101, 0b0011_0011_0011_0011);
//        swipe_test!(0b0010_1011_1111_0100, 0b0001_0111_1111_0001);
//        swipe_test!(0b0000_1010_1010_1110, 0b0000_0011_0011_0111);
//        swipe_test!(0b0000_0010_1111_1010, 0b0000_0001_1111_0011);
//        swipe_test!(0b1001_1110_1001_0110, 0b0011_0111_0011_0011);
//        swipe_test!(0b0000_0101_0011_0111, 0b0000_0011_0011_0111);
//        swipe_test!(0b0001_0011_0011_1001, 0b0001_0011_0011_0011);
//        swipe_test!(0b0011_1000_1000_0000, 0b0011_0001_0001_0000);
//        swipe_test!(0b1110_1100_1010_0011, 0b0111_0011_0011_0011);
//        swipe_test!(0b0110_0001_1001_0100, 0b0011_0001_0011_0001);
//        swipe_test!(0b0111_0100_0101_0010, 0b0111_0001_0011_0001);
//        swipe_test!(0b0001_0001_0000_1011, 0b0001_0001_0000_0111);
//        swipe_test!(0b0000_1010_0100_0011, 0b0000_0011_0001_0011);
//        swipe_test!(0b1011_0001_0100_0110, 0b0111_0001_0001_0011);
//        swipe_test!(0b1011_0000_1101_0011, 0b0111_0000_0111_0011);
//        swipe_test!(0b1101_1011_0110_0110, 0b0111_0111_0011_0011);
//        swipe_test!(0b1011_0110_0010_0000, 0b0111_0011_0001_0000);
//        swipe_test!(0b1011_1101_0001_1010, 0b0111_0111_0001_0011);
//        swipe_test!(0b1100_1111_1111_0000, 0b0011_1111_1111_0000);
//        swipe_test!(0b1111_1001_0111_1000, 0b1111_0011_0111_0001);
//        swipe_test!(0b1111_0101_1101_1110, 0b1111_0011_0111_0111);
//        swipe_test!(0b0000_0110_1101_1110, 0b0000_0011_0111_0111);
//        swipe_test!(0b0011_1001_1101_0001, 0b0011_0011_0111_0001);
//        swipe_test!(0b0110_1001_0000_0101, 0b0011_0011_0000_0011);
//        swipe_test!(0b1110_1100_1100_1001, 0b0111_0011_0011_0011);
//        swipe_test!(0b1010_1001_1101_1000, 0b0011_0011_0111_0001);
//        swipe_test!(0b1011_1001_1101_0000, 0b0111_0011_0111_0000);
//        swipe_test!(0b0000_1100_0010_1101, 0b0000_0011_0001_0111);
//        swipe_test!(0b0100_0000_0111_1101, 0b0001_0000_0111_0111);
//        swipe_test!(0b1000_1110_0101_0011, 0b0001_0111_0011_0011);
//        swipe_test!(0b0110_0110_1101_1001, 0b0011_0011_0111_0011);
//        swipe_test!(0b0100_1000_0101_0010, 0b0001_0001_0011_0001);
//        swipe_test!(0b0010_1010_1110_1101, 0b0001_0011_0111_0111);
//        swipe_test!(0b0011_0110_1001_0111, 0b0011_0011_0011_0111);
//        swipe_test!(0b0100_1011_1010_1101, 0b0001_0111_0011_0111);
//    }
//}
